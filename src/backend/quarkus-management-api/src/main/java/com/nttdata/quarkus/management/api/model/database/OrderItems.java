package com.nttdata.quarkus.management.api.model.database;
// Generated Oct 20, 2020 7:29:03 AM by Hibernate Tools 6.0.0.Alpha2


import io.quarkus.hibernate.orm.panache.PanacheEntityBase;

import javax.persistence.*;
import java.math.BigDecimal;

/**
 * OrderItems generated by hbm2java
 */
@Entity
@Table(name="ORDER_ITEMS"
)
public class OrderItems  extends PanacheEntityBase implements java.io.Serializable {


     private OrderItemsId id;
     private Orders orders;
     private Products products;
     private BigDecimal quantity;
     private BigDecimal unitPrice;

    public OrderItems() {
    }

    public OrderItems(OrderItemsId id, Orders orders, Products products, BigDecimal quantity, BigDecimal unitPrice) {
       this.id = id;
       this.orders = orders;
       this.products = products;
       this.quantity = quantity;
       this.unitPrice = unitPrice;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="orderId", column=@Column(name="ORDER_ID", nullable=false, precision=12, scale=0) ), 
        @AttributeOverride(name="itemId", column=@Column(name="ITEM_ID", nullable=false, precision=12, scale=0) ) } )
    public OrderItemsId getId() {
        return this.id;
    }
    
    public void setId(OrderItemsId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORDER_ID", nullable=false, insertable=false, updatable=false)
    public Orders getOrders() {
        return this.orders;
    }
    
    public void setOrders(Orders orders) {
        this.orders = orders;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRODUCT_ID", nullable=false)
    public Products getProducts() {
        return this.products;
    }
    
    public void setProducts(Products products) {
        this.products = products;
    }

    
    @Column(name="QUANTITY", nullable=false, precision=8, scale=2)
    public BigDecimal getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }

    
    @Column(name="UNIT_PRICE", nullable=false, precision=8, scale=2)
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }
    
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }




}


