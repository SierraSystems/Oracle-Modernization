openapi: 3.0.0
info:
  version: 0.0.1
  title: Oracle Modernization Management API
  description: Management API
servers:
  - url: "http://localhost:8080"
tags:
  - name: contacts
    description: Endpoints for contact data
  - name: customers
    description: Endpoints for customer data
paths:
  "/contacts":
    get:
      summary: get all contacts
      operationId: GetContacts
      tags:
        - contacts
      parameters:
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/fromCursorParam"
      responses:
        "200":
          description: get all contacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactList"
    put:
      summary: Update
      operationId: Update Contact
      tags:
        - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        "200":
          description: Contact was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
    post:
      summary: Add
      operationId: Add Contact
      tags:
        - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        "201":
          description: Contact was added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
  "/contacts/{contactId}":
    get:
      summary: get a contact by id
      operationId: GetContact
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: number
      tags:
        - contacts
      responses:
        "200":
          description: contact found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        "404":
          description: contact not found
    delete:
      summary: delete contact by id
      operationId: DeleteContact
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: number
      tags:
        - contacts
      responses:
        "200":
          description: contact was deleted
  "/customers":
    get:
      summary: get all customers
      operationId: GetCustomers
      tags:
        - customers
      responses:
        "200":
          description: get all customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
    post:
      summary: Add
      operationId: Add Customer
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "201":
          description: Customer was added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      summary: Update
      operationId: Update Customer
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: Customer was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  "/customers/{customerId}":
    get:
      summary: get a customer by id
      operationId: GetCustomer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: number
      tags:
        - customers
      responses:
        "200":
          description: customer found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "404":
          description: customer not found
    delete:
      summary: delete customer by id
      operationId: DeleteCustomer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: number
      tags:
        - customers
      responses:
        "200":
          description: customer was deleted
  "/countries":
    get:
      summary: get all countries
      operationId: GetCountries
      tags:
        - countries
      responses:
        "200":
          description: get all Countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Countries"
    post:
      summary: Add
      operationId: Add Country
      tags:
        - countries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Country"
      responses:
        "201":
          description: Country was added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
    put:
      summary: Update
      operationId: Update Country
      tags:
        - countries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Country"
      responses:
        "200":
          description: Country was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
  "/countries/{countryId}":
    get:
      summary: get a country by id
      operationId: GetCountry
      parameters:
        - in: path
          name: countryId
          required: true
          schema:
            type: string
      tags:
        - countries
      responses:
        "200":
          description: country found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        "404":
          description: contact not found
    delete:
      summary: delete country by id
      operationId: DeleteCountry
      parameters:
        - in: path
          name: countryId
          required: true
          schema:
            type: string
      tags:
        - countries
      responses:
        "200":
          description: contact was deleted
components:
  parameters:
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: The numbers of items to return.
    fromCursorParam:
      in: query
      name: fromcursor
      required: false
      schema:
        type: string
      description: The cursor from where to return results
  schemas:
    ListMetadata:
      type: object
      description: list metadata
      properties:
        nextCursor:
          type: string
          description: the next cursor
    Contact:
      type: object
      description: Contact
      properties:
        contactId:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        customerId:
          type: number
        customerName:
          type: string
    ContactList:
      type: object
      properties:
        items:
          type: array
          description: Contacts
          items:
            $ref: "#/components/schemas/Contact"
        metadata:
          $ref: "#/components/schemas/ListMetadata"
    Customer:
      type: object
      description: Customer
      properties:
        customerId:
          type: number
        fullName:
          type: string
        website:
          type: string
        address:
          type: string
        creditLimit:
          type: number
    Customers:
      type: array
      description: Customers
      items:
        $ref: "#/components/schemas/Customer"
    Country:
      type: object
      description: Country
      properties:
        countryId:
          type: string
        countryName:
          type: string
        regionId:
          type: number
    Countries:
      type: array
      description: Countries
      items:
        $ref: "#/components/schemas/Country"
